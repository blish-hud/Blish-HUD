<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="TokenPermissionDescription_Account" xml:space="preserve">
    <value>Dein Anzeigename, ID, Heimatwelt und die Liste der Gilden in denen du Mitglied bist.</value>
  </data>
  <data name="TokenPermissionDescription_Inventories" xml:space="preserve">
    <value>Deine Bank, Materiallager, freigeschaltete Rezepte und Charakterinventare.</value>
  </data>
  <data name="TokenPermissionDescription_Characters" xml:space="preserve">
    <value>Grundlegende Informationen über deine Charaktere.</value>
  </data>
  <data name="TokenPermissionDescription_Tradingpost" xml:space="preserve">
    <value>Deine Schwarzlöwen-Transaktionen.</value>
  </data>
  <data name="TokenPermissionDescription_Wallet" xml:space="preserve">
    <value>Dein Geld- und Schlüsselbeutel.</value>
  </data>
  <data name="TokenPermissionDescription_Unlocks" xml:space="preserve">
    <value>Der freigeschaltete Teil deiner Garderobe — Farben, Minis und Todesstöße, etc.— Sowie derzeitig ausgesrüstete Skins.</value>
  </data>
  <data name="TokenPermissionDescription_Pvp" xml:space="preserve">
    <value>Deine Statistiken im PvP, Spielverlauf, Belohnungspfadfortschritt und Details benutzerdefinierter Arenen.</value>
  </data>
  <data name="TokenPermissionDescription_Builds" xml:space="preserve">
    <value>Deine dezeit ausgewählten Spezialisierungen, Eigenschaften, Fähigkeiten und Ausrüstung in jedem Spielmodus.</value>
  </data>
  <data name="TokenPermissionDescription_Progression" xml:space="preserve">
    <value>Deine Errungenschaften, der Freischaltsstatus von Verliesen, die Verteilung deiner Beherrschungspunkte und dein allgemeiner Fortschritt in der offenen Welt.</value>
  </data>
  <data name="TokenPermissionDescription_Guilds" xml:space="preserve">
    <value>Gildenroster, Verlauf, und die Nachricht des Tages von allen Gilden in denen du Mitglied bist.</value>
  </data>
  <data name="ManageApiKeysSection" xml:space="preserve">
    <value>API-Schlüssel verwalten</value>
  </data>
  <data name="ManageApiKeys_Title" xml:space="preserve">
    <value>API-Schlüssel registrieren</value>
  </data>
  <data name="AccountInfo_Character" xml:space="preserve">
    <value>Charakter</value>
  </data>
  <data name="AccountInfo_Commander" xml:space="preserve">
    <value>Kommandeur</value>
  </data>
  <data name="CreateTokenInstructions_Step1" xml:space="preserve">
    <value>Navigiere zur offiziellen Anwendungsseite.</value>
  </data>
  <data name="CreateTokenInstructions_Step2" xml:space="preserve">
    <value>Drücke "Neuer Schlüssel".</value>
  </data>
  <data name="CreateTokenInstructions_Step3" xml:space="preserve">
    <value>Wähle alle Berechtigungen aus und
drücke auf
"API-SCHLÜSSEL ERSTELLEN".</value>
  </data>
  <data name="CreateTokenInstructions_Step4" xml:space="preserve">
    <value>Kopiere den neuen Schlüssel.</value>
  </data>
  <data name="CreateTokenInstructions_Step5" xml:space="preserve">
    <value>Füge den Schlüssel in das Feld oben ein
und drücke "Registrieren".</value>
  </data>
  <data name="CreateTokenInstructions_Warning" xml:space="preserve">
    <value>Es kann ein Schlüssel mit weniger Berechtigungen
registriert werden, jedoch könnten manche Features
und Module nicht ordnungsgemäß funktionieren.

Es sind mindestens die Berechtigungen "account" und
"characters" erforderlich.</value>
  </data>
  <data name="Link_ManageApplications" xml:space="preserve">
    <value>Anwendungen</value>
  </data>
  <data name="ManageApiKeys_DeleteToken" xml:space="preserve">
    <value>Schlüssel löschen</value>
  </data>
  <data name="ManageApiKeys_Register" xml:space="preserve">
    <value>Registrieren</value>
  </data>
  <data name="Token_NoName" xml:space="preserve">
    <value>(Kein Name)</value>
  </data>
  <data name="TokenStatus_AccountFailed" xml:space="preserve">
    <value>Anfrage von Accountdetails fehlgeschlagen</value>
  </data>
  <data name="TokenStatus_FailedToLoad" xml:space="preserve">
    <value>Laden von Schlüssel fehlgeschlagen.</value>
  </data>
  <data name="TokenStatus_InvalidToken" xml:space="preserve">
    <value>Ungültiger Schlüssel</value>
  </data>
  <data name="TokenStatus_MissingMinPermission" xml:space="preserve">
    <value>Erforderliche Berechtigungen fehlen</value>
  </data>
  <data name="TokenStatus_PartialPermission" xml:space="preserve">
    <value>Schlüssel fehlen Berechtigungen</value>
  </data>
  <data name="TokenStatus_ValidToken" xml:space="preserve">
    <value>{0} ({1}) - Gültiger Schlüssel</value>
  </data>
</root>