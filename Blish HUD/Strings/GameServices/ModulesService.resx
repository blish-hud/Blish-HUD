<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
		Microsoft ResX Schema

		Version 1.3

		The primary goals of this format is to allow a simple XML format 
		that is mostly human readable. The generation and parsing of the 
		various data types are done through the TypeConverter classes 
		associated with the data types.

		Example:

		... ado.net/XML headers & schema ...
		<resheader name="resmimetype">text/microsoft-resx</resheader>
		<resheader name="version">1.3</resheader>
		<resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
		<resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
		<data name="Name1">this is my long string</data>
		<data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
		<data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
			[base64 mime encoded serialized .NET Framework object]
		</data>
		<data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
			[base64 mime encoded string representing a byte array form of the .NET Framework object]
		</data>

		There are any number of "resheader" rows that contain simple 
		name/value pairs.

		Each data row contains a name, and value. The row also contains a 
		type or mimetype. Type corresponds to a .NET class that support 
		text/value conversion through the TypeConverter architecture. 
		Classes that don't support this are serialized and stored with the 
		mimetype set.

		The mimetype is used for serialized objects, and tells the 
		ResXResourceReader how to depersist the object. This is currently not 
		extensible. For a given mimetype the value must be set accordingly:

		Note - application/x-microsoft.net.object.binary.base64 is the format 
		that the ResXResourceWriter will generate, however the reader can 
		read any of the formats listed below.

		mimetype: application/x-microsoft.net.object.binary.base64
		value   : The object must be serialized with 
			: System.Serialization.Formatters.Binary.BinaryFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.soap.base64
		value   : The object must be serialized with 
			: System.Runtime.Serialization.Formatters.Soap.SoapFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.bytearray.base64
		value   : The object must be serialized into a byte array 
			: using a System.ComponentModel.TypeConverter
			: and then encoded with base64 encoding.
	-->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>1.3</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ApiPermission_RequestedApiPermissionsInfo" xml:space="preserve">
    <value>has requested to read from the following APIs</value>
  </data>
  <data name="ApiPermission_Required" xml:space="preserve">
    <value>Required</value>
  </data>
  <data name="ApiPermission_Optional" xml:space="preserve">
    <value>Optional</value>
  </data>
  <data name="ManageModulesSection" xml:space="preserve">
    <value>Manage Modules</value>
  </data>
  <data name="Dependency_NotFound" xml:space="preserve">
    <value>[Not Found]</value>
  </data>
  <data name="Dependency_NotEnabled" xml:space="preserve">
    <value>[Not Enabled]</value>
  </data>
  <data name="Dependency_WrongVersion" xml:space="preserve">
    <value>[Wrong Version]</value>
  </data>
  <data name="ApiPermission_MissingRequiredPermissions" xml:space="preserve">
    <value>Missing required permissions:</value>
  </data>
  <data name="Dependency_MissingDependencies" xml:space="preserve">
    <value>This module relies on dependencies not currently available:</value>
  </data>
  <data name="ModuleState_Disabled" xml:space="preserve">
    <value>Disabled</value>
  </data>
  <data name="ModuleState_Loading" xml:space="preserve">
    <value>Loading</value>
  </data>
  <data name="ModuleState_Enabled" xml:space="preserve">
    <value>Enabled</value>
  </data>
  <data name="ModuleState_Disabling" xml:space="preserve">
    <value>Disabling</value>
  </data>
  <data name="ModuleState_FatalError" xml:space="preserve">
    <value>Fatal Error</value>
  </data>
  <data name="ModuleManagement_AuthoredBy" xml:space="preserve">
    <value>Authored by</value>
  </data>
  <data name="ModuleManagement_EnableModule" xml:space="preserve">
    <value>Enable Module</value>
  </data>
  <data name="ModuleManagement_DisableModule" xml:space="preserve">
    <value>Disable Module</value>
  </data>
  <data name="ModuleManagement_Description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="ModuleManagement_ApiPermissions" xml:space="preserve">
    <value>API Permissions</value>
  </data>
  <data name="ModuleManagement_ModifyPermissions" xml:space="preserve">
    <value>Modify Permissions</value>
  </data>
  <data name="ModuleManagement_ClearPermissions" xml:space="preserve">
    <value>Clear Permissions</value>
  </data>
  <data name="ModuleManagement_Dependencies" xml:space="preserve">
    <value>Dependencies</value>
  </data>
  <data name="ModuleManagement_IgnoreDependencyRequirements" xml:space="preserve">
    <value>Ignore Dependency Requirements</value>
  </data>
  <data name="ModuleManagement_ViewModuleLogs" xml:space="preserve">
    <value>View Module Logs</value>
  </data>
  <data name="ModuleManagement_ModuleSettings" xml:space="preserve">
    <value>Module Settings</value>
  </data>
  <data name="Dependency_NoDependencies" xml:space="preserve">
    <value>No dependencies</value>
  </data>
  <data name="ApiPermission_NoPermissionsRequested" xml:space="preserve">
    <value>No permissions requested</value>
  </data>
  <data name="Dependency_RequiresVersion" xml:space="preserve">
    <value>Requires {0}</value>
  </data>
  <data name="ModuleSettings_ShownWhenEnabled" xml:space="preserve">
    <value>Settings will show when Module is enabled</value>
  </data>
  <data name="ModuleOption_ClearSettings" xml:space="preserve">
    <value>Clear Settings</value>
  </data>
  <data name="ModuleOption_ClearSettings_DescriptionEnabled" xml:space="preserve">
    <value>Reset the module settings back to their default.</value>
  </data>
  <data name="ModuleOption_ClearSettings_DescriptionDisabled" xml:space="preserve">
    <value>Can't clear settings while the module is enabled.</value>
  </data>
  <data name="ModuleOption_OpenDir" xml:space="preserve">
    <value>Open '{0}' Directory</value>
  </data>
  <data name="NoModules_Info" xml:space="preserve">
    <value>You don't currently have any modules.
Download some modules and place them in the modules folder.</value>
  </data>
  <data name="NoModules_OpenFolder" xml:space="preserve">
    <value>Open Modules Folder</value>
  </data>
  <data name="PkgManagement_Update" xml:space="preserve">
    <value>Update</value>
  </data>
  <data name="PkgManagement_Install" xml:space="preserve">
    <value>Install</value>
  </data>
  <data name="PkgManagement_CurrentVersion" xml:space="preserve">
    <value>Current Version</value>
  </data>
  <data name="PkgManagement_Downgrade" xml:space="preserve">
    <value>Downgrade</value>
  </data>
  <data name="PkgManagement_Progress_FailedToGetReleases" xml:space="preserve">
    <value>Failed to pull root from package repo.</value>
  </data>
  <data name="PkgManagement_Progress_CheckingRepository" xml:space="preserve">
    <value>Checking repository...</value>
  </data>
  <data name="PkgManagement_Progress_GettingModuleList" xml:space="preserve">
    <value>Getting module list...</value>
  </data>
  <data name="PkgManagement_Progress_FailedToReadOrParseRepoManifest" xml:space="preserve">
    <value>Failed to get or parse latest repo manifest.</value>
  </data>
  <data name="PkgInstall_Progress_Installing" xml:space="preserve">
    <value>Installing...</value>
  </data>
  <data name="PkgInstall_Progress_Upgrading" xml:space="preserve">
    <value>Upgrading...</value>
  </data>
  <data name="PkgManagement_ModulesNeedRestart" xml:space="preserve">
    <value>Blish HUD requires a restart before some modules can be re-enabled.</value>
  </data>
  <data name="ModuleOption_DeleteModule" xml:space="preserve">
    <value>Delete Module</value>
  </data>
</root>